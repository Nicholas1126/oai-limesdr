/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "fixed_grammar.asn"
 * 	`asn1c -gen-PER`
 */

#ifndef	_MobilityControlInfoSCG_r12_H_
#define	_MobilityControlInfoSCG_r12_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include "C-RNTI.h"
#include "CipheringAlgorithm-r12.h"
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MobilityControlInfoSCG_r12__t307_r12 {
	MobilityControlInfoSCG_r12__t307_r12_ms50	= 0,
	MobilityControlInfoSCG_r12__t307_r12_ms100	= 1,
	MobilityControlInfoSCG_r12__t307_r12_ms150	= 2,
	MobilityControlInfoSCG_r12__t307_r12_ms200	= 3,
	MobilityControlInfoSCG_r12__t307_r12_ms500	= 4,
	MobilityControlInfoSCG_r12__t307_r12_ms1000	= 5,
	MobilityControlInfoSCG_r12__t307_r12_ms2000	= 6,
	MobilityControlInfoSCG_r12__t307_r12_spare1	= 7
} e_MobilityControlInfoSCG_r12__t307_r12;

/* Forward declarations */
struct RACH_ConfigDedicated;

/* MobilityControlInfoSCG-r12 */
typedef struct MobilityControlInfoSCG_r12 {
	long	 t307_r12;
	C_RNTI_t	*ue_IdentitySCG_r12	/* OPTIONAL */;
	struct RACH_ConfigDedicated	*rach_ConfigDedicated_r12	/* OPTIONAL */;
	CipheringAlgorithm_r12_t	*cipheringAlgorithmSCG_r12	/* OPTIONAL */;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MobilityControlInfoSCG_r12_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_t307_r12_2;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_MobilityControlInfoSCG_r12;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "RACH-ConfigDedicated.h"

#endif	/* _MobilityControlInfoSCG_r12_H_ */
#include <asn_internal.h>
