/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "fixed_grammar.asn"
 * 	`asn1c -gen-PER`
 */

#ifndef	_InterFreqCarrierFreqInfo_r12_H_
#define	_InterFreqCarrierFreqInfo_r12_H_


#include <asn_application.h>

/* Including external dependencies */
#include "ARFCN-ValueEUTRA-r9.h"
#include "Q-RxLevMin.h"
#include "P-Max.h"
#include "T-Reselection.h"
#include "ReselectionThreshold.h"
#include "AllowedMeasBandwidth.h"
#include "PresenceAntennaPort1.h"
#include "CellReselectionPriority.h"
#include "NeighCellConfig.h"
#include "Q-OffsetRange.h"
#include "Q-QualMin-r9.h"
#include <NativeEnumerated.h>
#include "ReselectionThresholdQ-r9.h"
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum InterFreqCarrierFreqInfo_r12__reducedMeasPerformance_r12 {
	InterFreqCarrierFreqInfo_r12__reducedMeasPerformance_r12_true	= 0
} e_InterFreqCarrierFreqInfo_r12__reducedMeasPerformance_r12;

/* Forward declarations */
struct SpeedStateScaleFactors;
struct InterFreqNeighCellList;
struct InterFreqBlackCellList;
struct MultiBandInfoList_r11;

/* InterFreqCarrierFreqInfo-r12 */
typedef struct InterFreqCarrierFreqInfo_r12 {
	ARFCN_ValueEUTRA_r9_t	 dl_CarrierFreq_r12;
	Q_RxLevMin_t	 q_RxLevMin_r12;
	P_Max_t	*p_Max_r12	/* OPTIONAL */;
	T_Reselection_t	 t_ReselectionEUTRA_r12;
	struct SpeedStateScaleFactors	*t_ReselectionEUTRA_SF_r12	/* OPTIONAL */;
	ReselectionThreshold_t	 threshX_High_r12;
	ReselectionThreshold_t	 threshX_Low_r12;
	AllowedMeasBandwidth_t	 allowedMeasBandwidth_r12;
	PresenceAntennaPort1_t	 presenceAntennaPort1_r12;
	CellReselectionPriority_t	*cellReselectionPriority_r12	/* OPTIONAL */;
	NeighCellConfig_t	 neighCellConfig_r12;
	Q_OffsetRange_t	*q_OffsetFreq_r12	/* DEFAULT 15 */;
	struct InterFreqNeighCellList	*interFreqNeighCellList_r12	/* OPTIONAL */;
	struct InterFreqBlackCellList	*interFreqBlackCellList_r12	/* OPTIONAL */;
	Q_QualMin_r9_t	*q_QualMin_r12	/* OPTIONAL */;
	struct InterFreqCarrierFreqInfo_r12__threshX_Q_r12 {
		ReselectionThresholdQ_r9_t	 threshX_HighQ_r12;
		ReselectionThresholdQ_r9_t	 threshX_LowQ_r12;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *threshX_Q_r12;
	Q_QualMin_r9_t	*q_QualMinWB_r12	/* OPTIONAL */;
	struct MultiBandInfoList_r11	*multiBandInfoList_r12	/* OPTIONAL */;
	long	*reducedMeasPerformance_r12	/* OPTIONAL */;
	Q_QualMin_r9_t	*q_QualMinRSRQ_OnAllSymbols_r12	/* OPTIONAL */;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} InterFreqCarrierFreqInfo_r12_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_reducedMeasPerformance_r12_22;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_InterFreqCarrierFreqInfo_r12;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "SpeedStateScaleFactors.h"
#include "InterFreqNeighCellList.h"
#include "InterFreqBlackCellList.h"
#include "MultiBandInfoList-r11.h"

#endif	/* _InterFreqCarrierFreqInfo_r12_H_ */
#include <asn_internal.h>
