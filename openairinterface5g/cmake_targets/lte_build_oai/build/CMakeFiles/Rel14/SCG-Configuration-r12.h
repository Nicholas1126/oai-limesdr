/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "fixed_grammar.asn"
 * 	`asn1c -gen-PER`
 */

#ifndef	_SCG_Configuration_r12_H_
#define	_SCG_Configuration_r12_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NULL.h>
#include <NativeInteger.h>
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum SCG_Configuration_r12_PR {
	SCG_Configuration_r12_PR_NOTHING,	/* No components present */
	SCG_Configuration_r12_PR_release,
	SCG_Configuration_r12_PR_setup
} SCG_Configuration_r12_PR;

/* Forward declarations */
struct SCG_ConfigPartSCG_r12;
struct PowerCoordinationInfo_r12;

/* SCG-Configuration-r12 */
typedef struct SCG_Configuration_r12 {
	SCG_Configuration_r12_PR present;
	union SCG_Configuration_r12_u {
		NULL_t	 release;
		struct SCG_Configuration_r12__setup {
			struct SCG_Configuration_r12__setup__scg_ConfigPartMCG_r12 {
				long	*scg_Counter_r12	/* OPTIONAL */;
				struct PowerCoordinationInfo_r12	*powerCoordinationInfo_r12	/* OPTIONAL */;
				/*
				 * This type is extensible,
				 * possible extensions are below.
				 */
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *scg_ConfigPartMCG_r12;
			struct SCG_ConfigPartSCG_r12	*scg_ConfigPartSCG_r12	/* OPTIONAL */;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} setup;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SCG_Configuration_r12_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SCG_Configuration_r12;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "SCG-ConfigPartSCG-r12.h"
#include "PowerCoordinationInfo-r12.h"

#endif	/* _SCG_Configuration_r12_H_ */
#include <asn_internal.h>
